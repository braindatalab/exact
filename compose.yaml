# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker compose reference guide at
# https://docs.docker.com/compose/compose-file/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
services:
  backend:
    image: exact-backend
    build:
      context: ./platform/backend
    ports:
      - 8000:8000
    user: root
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      # - ./platform/backend/mysite/media:/app/mysite/media  
      - ./media:/app/mysite/media
    depends_on:
      - db
    env_file:
      - .env

  frontend:
    image: exact-frontend
    build:
      context: ./platform/frontend
    ports:
      - 3000:3000

  worker:
    image: exact-worker
    build:
      context: ./worker
    depends_on:
      - backend

  # Additional configuration for the worker service

  # The commented out section below is an example of how to define a PostgreSQL
  # database that your application can use. `depends_on` tells Docker Compose to
  # start the database before your application. The `db-data` volume persists the
  # database data between container restarts. The `db-password` secret is used
  # to set the database password. You must create `db/password.txt` and add
  # a password of your choosing to it before running `docker compose up`.

  db:
    image: postgres
    restart: always
    user: postgres
    secrets:
      - db-password
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=example
      - POSTGRES_PASSWORD_FILE=/run/secrets/db-password
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
volumes:
  db-data:
secrets:
  db-password:
    file: db/password.txt
