services:
  backend:
    image: exact-backend
    build:
      context: ./platform/backend
    ports:
      - "8000:8000"
    user: root
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./media:/app/mysite/media
    depends_on:
      - db
    env_file:
      - .env

  frontend:
    build:
      context: ./platform/frontend
    volumes:
      - ./platform/frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    working_dir: /app
    command: npm run dev
    environment:
      - CHOKIDAR_USEPOLLING=true

  # Dieser Dienst ist jetzt AKTIVIERT.
  # Er läuft nicht permanent, aber Docker Compose weiß jetzt, wie man
  # das 'exact-worker'-Image baut, wenn der 'build'-Befehl ausgeführt wird.
  worker:
    build:
      context: ./worker
    image: exact-worker  # Wir definieren den Namen des Images explizit

  db:
    image: postgres
    restart: always
    user: postgres
    secrets:
      - db-password
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=example
      - POSTGRES_PASSWORD_FILE=/run/secrets/db-password
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

  devcontainer:
    image: mcr.microsoft.com/devcontainers/base:ubuntu
    volumes:
      - .:/workspaces/exact
    working_dir: /workspaces/exact
    command: sleep infinity
    user: root

volumes:
  db-data:

secrets:
  db-password:
    file: db/password.txt